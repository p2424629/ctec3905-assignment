/* MOBILE AND GLOBAL STYLES */

/* applies to screens smaller than 700px (first breakpoint) */
/* and above unless overwritten below */

/* VARIABLES */
:root {
  --white_color: #f5f5f5;
  --background_color: #2f3640;
  --dark_color: rgba(68, 68, 68, 0.801);
  --red_color: #e1302a;
  --hover: rgba(0, 214, 170, 0.85);
}

/* WHOLE PAGE */

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Global parameters. - START */
body {
  background-color: var(--white_color);
  color: var(--background_color);
  font-family: 'Montserrat', Arial, Helvetica, sans-serif;
}

a {
  text-decoration: none;
  color: #2f3640;
}

/* SCROLL TO TOP BUTTON */
.scrollToTop {
  position: fixed;
  bottom: 2em;
  right: 1em;
  z-index: 9999;
  width: 4em;
  height: 4em;
  border: none;
  padding: 0.2em;
  transition: all 0.2s ease;
  opacity: 0;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
  background-color: var(--background_color);
  outline: none;
}

.scrollToTop i {
  font-size: 6ch;
  display: flex;
  justify-content: center;
  color: var(--white_color);
}

@media (hover: hover) and (pointer: fine) {
  .scrollToTop:hover {
    background-color: var(--white_color);
  }

  .scrollToTop:hover i {
    color: var(--background_color);
  }
}
.scrollToTop.scrollButtonActive {
  transition: all 0.35s ease;
  visibility: visible;
  cursor: pointer;
  opacity: 1;
}

/* Spinner */
.spinner:before {
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  height: 5rem;
  width: 5rem;
  border-radius: 5em;
  border: 2rem solid transparent;
  border-top-color: var(--red_color);
  border-bottom-color: var(--background_color);
  animation: spinner 0.8s ease infinite;
  transform: translate3d(-50%, -50%, 0);
  z-index: 9999;
}

@keyframes spinner {
  from {
    transform: translate3d(-50%, -50%, 0) rotate(0deg);
  }

  to {
    transform: translate3d(-50%, -50%, 0) rotate(360deg);
  }
}

/* Page Title */
.pageTitle {
  margin-top: 5rem;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
}

.pageTitle h1 {
  font-family: 'Montserrat Black', Arial, Helvetica, sans-serif;
  text-align: center;
  font-size: 60px;
  text-transform: uppercase;
}

/* Error */

.error {
  display: none;
}

.error.active {
  font-family: 'Montserrat Black', Arial, Helvetica, sans-serif;
  font-size: 40px;
  text-transform: uppercase;
  color: red;
  text-align: center;
  animation: fadeIn 2s;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Global parameters. - END */

/* navigation styles start here */

header {
  background: var(--background_color);
  text-align: center;
  position: fixed;
  top: 0;
  z-index: 999;
  width: 100%;
}

.logo {
  font-family: 'Montserrat Regular', sans-serif;
  color: var(--white_color);
  padding: 1rem;
  width: 200px;
  height: auto;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.logo_header {
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 200px;
  height: auto;
}

.nav-toggle {
  position: absolute !important;
  top: -9999px !important;
  left: -9999px !important;
}

.nav-toggle-label {
  position: absolute;
  top: 0;
  left: 0;
  margin-left: 1em;
  height: 100%;
  display: flex;
  align-items: center;
  cursor: pointer;
}

.nav-toggle-label span,
.nav-toggle-label span::before,
.nav-toggle-label span::after {
  display: block;
  background: white;
  height: 5px;
  width: 2em;
  border-radius: 2px;
  position: relative;
  transition: all 0.35s ease;
}

.nav-toggle-label span::before,
.nav-toggle-label span::after {
  content: '';
  position: absolute;
}

.nav-toggle-label span::before {
  bottom: 7px;
}

.nav-toggle-label span::after {
  top: 7px;
}

.nav-toggle-label.active span:nth-child(1) {
  transform: rotate(45deg);
  z-index: 955;
}

.nav-toggle-label.active span:nth-child(2) {
  left: 30px;
  opacity: 0;
}

.nav-toggle-label.active span:nth-child(3) {
  transform: rotate(-45deg);
  z-index: 955;
}

.nav-toggle-label.active span {
  background-color: var(--background_color);
}

.nav-toggle-label.active:hover span {
  background-color: var(--red_color);
}

nav {
  position: absolute;
  text-align: left;
  top: 100%;
  left: 0;
  background: var(--background_color);
  width: 100%;
  transform: scale(1, 0);
  transform-origin: top;
  transition: transform 500ms ease-in-out;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

nav li {
  margin: 1em;
}

nav a {
  display: flex;
  justify-content: flex-start;
  color: white;
  text-decoration: none;
  font-size: 1.2rem;
  text-transform: uppercase;
  opacity: 0;
  transition: opacity 150ms ease-in-out;
}

nav a:hover {
  color: var(--hover);
}

.nav-toggle:checked ~ nav {
  transform: scale(1, 1);
}

.nav-toggle:checked ~ nav a {
  opacity: 1;
  transition: opacity 250ms ease-in-out 250ms;
}

/* Navigation bar - END. */

/* TV SERIES output - START. */

#tvShows {
  margin-top: 1rem;
  position: relative;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  justify-content: space-evenly;
}

#tvShows p {
  font-family: 'Montserrat SemiBold', sans-serif;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0.2em;
  position: relative;
}

#tvShows p a {
  font-family: 'Montserrat SemiBold', sans-serif;
  color: var(--dark_color);
}

.card {
  --padding: 1.5rem;
  height: 400px;
  width: 280px;
  position: relative;
  transition: transform 500ms ease;
  z-index: 2;
  overflow: hidden;
  cursor: default;
  margin: 1em;
  border-radius: 0.5rem;
}

.card .overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 400px;
  transition: 0.3s ease-in-out;
  background-color: rgba(0, 0, 0, 0.4);
}

.card .overlay .tvShow {
  position: absolute;
  bottom: 0;
  left: 0;
  margin: 5px;
}

/* button shouldn't follow the delay animation for hover */
.details-button {
  display: flex;
  position: relative;
  bottom: 0;
  left: 0;
  justify-content: center;
  align-items: center;
  padding: var(--padding);
  width: 7rem;
  height: 2rem;
  border: none;
  background-color: var(--hover);
  font-family: 'Montserrat SemiBold', sans-serif;
  margin: 0.2rem;
  cursor: pointer;
  transition: all 0.2s ease;
  outline: none !important;
}

/* button shouldn't follow the delay animation for hover */
@media (hover: hover) {
  .details-button:hover {
    background-color: var(--white_color);
    transition-delay: 0s;
  }
}
.tvShow p {
  font-family: 'Montserrat Medium', sans-serif;
  color: white;
  font-size: 2ch;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
}

.tvShow p span {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

.tvShow p i {
  margin-left: 5px;
  margin-bottom: 2px;
  font-size: 2ch;
}

.star {
  color: gold;
}

.date {
  color: var(--white_color);
  text-shadow: 3px 3px rgba(0, 0, 0, 0.35);
}

.card-title {
  font-family: 'Montserrat Black', sans-serif;
  position: relative;
  font-size: 3ch;
  max-width: 100%;
  color: white;
  text-transform: uppercase;
  padding: 0.2rem;
  text-align: left;
}

/* Line under title that stays from left to max width */
.card-title::after {
  content: '';
  position: absolute;
  height: 4px;
  width: calc(100% + var(--padding));
  left: calc(var(--padding) * -1);
  bottom: 0;
  background: var(--hover);
  transition: transform 500ms ease;
}

.card .card_img img {
  width: 100%;
  height: 400px;
  z-index: 2;
  object-fit: cover;
  transition: 0.3s ease-out;
}

.card .card_img {
  height: 400px;
  z-index: 2;
  transition: 0.2s ease-out;
}

/* TODO: CHECK THIS !!!! */
.upcoming {
  height: 550px;
}

.upcoming img {
  width: 100%;
  height: 450px;
}

.card .addBtn {
  position: absolute;
  top: 10px;
  right: 10px;
  display: flex;
}

.card .addBtn > * {
  margin: 0 3px;
}

.card:hover .addBtn i {
  opacity: 1;
  transform: scale(1);
}

.card .addBtn i {
  opacity: 1;
  transform: scale(1);
  font-size: 3rem;
  display: block;
  color: white;
  cursor: pointer;
}

.addBtn .favorite:hover {
  color: var(--red_color);
  animation: heart 0.65s ease forwards infinite;
  transition-delay: 0s;
}

.addBtn .favorite:focus {
  color: var(--red_color);
}

@keyframes heart {
  0% {
    transform: scale(0.7) rotate(0deg);
  }

  50% {
    transform: scale(1.2) rotate(15deg);
  }

  100% {
    transform: scale(0.7) rotate(0deg);
  }
}

.addBtn .trash:hover {
  animation: trash 0.5s ease forwards infinite;
}

@keyframes trash {
  0% {
    transform: rotate(0deg);
  }

  33% {
    transform: rotate(15deg);
  }

  66% {
    transform: rotate(-15deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

.infoText {
  color: var(--dark_color);
  font-family: 'Montserrat Black', Arial, Helvetica, sans-serif;
  font-size: 1rem;
  padding: 1rem;
  margin-top: 2rem;
  text-align: center;
  animation: fadeIn 2s;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Buttons for pages */
.pages {
  width: 100%;
  display: none;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
}

#prev,
#next {
  margin: 1em 1.7em;
  font-size: 2ch;
  font-weight: bold;
  font-family: 'Montserrat Black', Arial, Helvetica, sans-serif;
  border: none;
  border-radius: 0.2em;
  background-color: white;
  box-shadow: 0 3px rgba(0, 0, 0, 0.1);
  color: var(--background_color);
  width: auto;
  padding: 0 0.5rem;
  height: 2em;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: 0.3s ease;
}
@media (hover: hover) and (pointer: fine) {
  #prev:hover,
  #next:hover {
    color: var(--dark_color);
    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.3);
  }
}
.remove,
.randomize {
  outline: none !important;
  margin-left: auto;
  margin-right: auto;
  margin-top: 2rem;
  padding: 0.5em;
  border-radius: 0.3em;
  border: none;
  background-color: var(--red_color);
  color: var(--white_color);
  font-family: 'Montserrat Medium', Arial, Helvetica, sans-serif;
  font-size: 1rem;
  transition: 0.25s;
  cursor: pointer;
  box-shadow: 0 3px rgba(0, 0, 0, 0.1);
}
@media (hover: hover) and (pointer: fine) {
  .remove:hover,
  .randomize:hover {
    background-color: var(--white_color);
    color: var(--background_color);
    box-shadow: 4px 4px rgba(0, 0, 0, 0.15);
  }
}
/* TV SHOW OUTPUT CARDS END*/

/* NOTIFICATIONS */

.notification {
  z-index: 999;
  background-color: #00c853;
  padding: 0.5em;
  border-radius: 0.2em;
  width: auto;
  font-family: 'Montserrat Medium', Arial, Helvetica, sans-serif;
  color: white;
  position: fixed;
  left: 1em;
  bottom: -3em;
  opacity: 0;
  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.35);
}

#alreadyStored {
  background-color: var(--red_color);
}

.notification.added {
  animation: notification 2.5s forwards;
}

.notification.alreadyStored {
  animation: notification 2.5s forwards;
}

@keyframes notification {
  0% {
    opacity: 0;
    transform: translateY(-3em);
  }

  50% {
    opacity: 1;
    transform: translateY(-6em);
  }

  80% {
    opacity: 1;
    transform: translateY(-6em);
  }

  100% {
    opacity: 0;
    transform: translateY(-6em);
  }
}

/* TABLET STYLES */

@media screen and (min-width: 700px) {
  /* applies to screens wider than 699px */
  .nav-toggle-label {
    display: none;
  }

  header {
    display: grid;
    grid-template-columns: 1fr auto minmax(600px, 3fr) 1fr;
  }

  .logo {
    grid-column: 1 / 3;
  }

  nav {
    all: unset;
    grid-column: 3 / 4;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    height: 4rem;
  }

  nav ul {
    display: flex;
  }

  nav li {
    margin-left: 3em;
  }

  nav a {
    opacity: 1;
    position: relative;
  }

  /* add animated line on top of links */
  nav a::before {
    content: '';
    display: block;
    height: 5px;
    background: var(--hover);
    position: absolute;
    top: -0.75em;
    left: 0;
    right: 0;
    transform: scale(0, 1);
    transition: transform ease-in-out 250ms;
  }

  nav a:hover::before {
    transform: scale(1, 1);
  }
}

/* DESKTOP STYLES */

@media screen and (min-width: 1024px) {
  /* applies to screens wider than 999px */
  .card {
    height: 500px;
    width: 300px;
    position: relative;
    z-index: 2;
    transition: 0.4s ease;
  }

  .card .overlay {
    height: 100%;
    /* gradient on overlay */
    background: linear-gradient(
      hsl(0 0% 0% / 0),
      hsl(0 0% 0% / 0.3) 20%,
      hsl(0 0% 0% / 1)
    );
    transform: translateY(33%);
    transition: transform 0.5s ease;
  }

  /* hide all except the title */
  .tvShow > *:not(.card-title) {
    opacity: 0;
    transition: opacity 0.5s ease-in;
  }

  /* scale only if hover or have something */
  .card:hover,
  .card:focus-within {
    transform: scale(1.05);
    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);
  }

  /* Fixes the tab in the cards problem */
  .card:hover .overlay,
  .card:focus-within .overlay {
    transform: translateY(0);
    transition-delay: 0.5s;
  }

  /* show the series details. Focus-within is for having the focus on the inside elements, like tabbing with keyboard. */
  .card:hover .tvShow > *:not(.card-title),
  .card:focus-within .tvShow > *:not(.card-title) {
    opacity: 1;
    transition-delay: 1s;
  }

  /* green line of title starts from the left */
  .card-title::after {
    transform-origin: left;
    transform: scaleX(0);
  }

  .card:hover .card-title::after {
    transform: scaleX(1);
  }

  .card .addBtn i {
    opacity: 0;
    transition: 0.5s ease-out;
    /* Animate Heart for hover */
    transform: scale(0);
  }

  /* "heart" and "trash" buttons should appeared after the delay */
  .card:hover .addBtn i {
    transition-delay: 0.5s;
  }

  .card .card_img img {
    height: 500px;
    overflow: hidden;
  }

  .card .card_img {
    height: 500px;
    overflow: hidden;
  }
}
